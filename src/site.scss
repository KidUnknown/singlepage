@use "sass:math";
@import "./global-reset.scss";

.page-title {
  font-size: clamp(3.75rem, 2rem, 1.35rem);
  color: var(--heading-text);
}
  
.container {
  margin-inline: auto;
  width: min(100% - 2rem, 60rem);

  .grid-wrapper {
    border: 0.5rem solid var(--color-brand);
    display: flex;
    flex-direction: column;
    
    @media only screen and (min-width: 750px) {
      flex-direction: row;
    }
  }
}
  
[class*="theme-"] {
  background: var(--bg);
  color: var(--body-text);
}
  
.theme-inverted {
  --bg: var(--color-white);
  --body-text: var(--color-black);
  --heading-text: var(--color-black);
  --button-text: var(--color-brand);
  --button-bg: var(--color-black);
}
  
@media (prefers-color-scheme: dark) {
  .theme-inverted {
    --bg: var(--color-black);
    --body-text: var(--color-white);
    --heading-text: var(--color-brand);
    --button-text: var(--color-brand);
    --button-bg: var(--color-white);
  }
}
  
.theme-brand {
  --bg: var(--color-brand);
  --body-text: var(--color-white);
  --heading-text: var(--color-white);
  --button-text: var(--color-brand);
  --button-bg: var(--color-white);
}

.theme-wild-llama {
  --bg: linear-gradient(45deg, blue, red);
  --body-text: var(--color-white);
  --heading-text: red;

  --button-text: var(--color-brand);
  --button-bg: var(--color-white);
}

.grid {
  display: grid;
  flex: 1;
  gap: 1.25rem;
  padding: 0.5rem;

  &__list-items {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(min(100%, 160px), 1fr));
    list-style: none;

    .posts & {
      display: flex;
      flex-flow: column wrap;
      align-content: space-between;
      justify-content: flex-start;

      &:before,
      &:after {
        content: "";
        display: flex;
        flex-basis: 100%;
        width: 0;
        order: 2;
      }

      .grid__list-item {
        border: 0;
        margin-bottom: 2%; /* (100-32*3)/2 */
        padding: 1em;
        width: 32%;

        @for $i from 1 through $repeat {
          &:nth-child(#{length($colors)}n+#{$i}) {
            background: darken(nth($colors, random(length($colors))), 10%);
          }
        }

        /* Re-order items into rows */
        &:nth-child(3n+1) { order: 1; }
        &:nth-child(3n+2) { order: 2; }
        &:nth-child(3n)   { order: 3; }
      }
    }
    
    // Albums layout overrides
    .albums & {
      display: grid;
      gap: 1.5rem;
      width: min(100%, 70rem);
      grid-template-columns: 1fr;

      @media (min-width: 760px) {
        margin-inline: auto;
        grid-template-columns: repeat(4, 1fr);
      }
      /* Main list styling */
      .grid__list-item {
        border-radius: 0.5rem;
        box-shadow: 5rem 3.75rem -3rem var(--color-brand);

        @media (min-width: 760px) {
          &:first-of-type {
            grid-column: span 2;
          }
          &:nth-of-type(4) {
            grid-column: span 2;
          }
          &:last-of-type {
            grid-column-start: 4;
            grid-row-start: 1;
            grid-row-end: span 2;
          }
        }
      }
    }
  }

  &__list-item {
    border: 1px solid var(--body-text);
    background-color: var(--bg);
    padding: 1rem;
    position: relative;
  }

  &__list-title {
    color: var(--heading-text);
    font-size: 1.85rem;
    font-weight: var(--fw-600);
    text-transform: uppercase;
    text-align: center;
  }

  &__img {
    width: 100%;
    aspect-ratio: 1 / 1;
    object-fit: cover;
  }

  &__btn {
    background-color: var(--bg);
    border: 1px solid var(--bg);
    box-shadow: 0 5px 15px var(--color-black);
    border-radius: 0.5rem;
    color: var(--body-text);
    padding: 0.5rem 1rem;
    transition: padding 0.5s ease-in-out;

    &:hover {
      padding: 0.5rem 1.050rem;
    }
  }

  /* First triple row grid <ul> */
  &__feature-list {
    .grid__list-item {
      list-style: none;
      border: 0;
    }
  }
}

/* Navigation and tagging links */
.meta {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem 1rem;
  padding-bottom: 2rem;

  &__tag {
    list-style: none;

    a {
      color: var(--body-text);
    }
  }
}

// .article {
//   width: math.div(600px, 960px) * 100%;
// }

// .aside {
//   width: math.div(300px, 960px) * 100%;
// }

.footer-inner {
  min-height: 200px;
}
